// <auto-generated />
using System;
using Mentorship.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mentorship.Migrations
{
    [DbContext(typeof(MentorshipDbContext))]
    partial class MentorshipDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mentorship.Models.Mentee", b =>
                {
                    b.Property<int>("MenteeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mentee_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenteeId"));

                    b.Property<string>("Bio")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("bio");

                    b.Property<string>("Interests")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("interests");

                    b.Property<string>("PreferredMentorAgeRange")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("preferred_mentor_age_range");

                    b.Property<string>("PreferredMentorGender")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("preferred_mentor_gender");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("MenteeId")
                        .HasName("PK__Mentees__C079F297FE4B1A9F");

                    b.HasIndex("UserId");

                    b.ToTable("Mentees");
                });

            modelBuilder.Entity("Mentorship.Models.Mentor", b =>
                {
                    b.Property<int>("MentorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mentor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MentorId"));

                    b.Property<string>("AreaOfExpertise")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("area_of_expertise");

                    b.Property<string>("Availability")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("availability");

                    b.Property<string>("Bio")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("bio");

                    b.Property<decimal?>("HourlyRate")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("hourly_rate");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("MentorId")
                        .HasName("PK__Mentors__E5D27EF34F0AB75A");

                    b.HasIndex("UserId");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("Mentorship.Models.MentorMenteeAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("assignment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<DateTime?>("AssignedDate")
                        .HasColumnType("date")
                        .HasColumnName("assigned_date");

                    b.Property<int?>("MenteeId")
                        .HasColumnType("int")
                        .HasColumnName("mentee_id");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int")
                        .HasColumnName("mentor_id");

                    b.HasKey("AssignmentId")
                        .HasName("PK__MentorMe__DA89181451D260B3");

                    b.HasIndex("MenteeId");

                    b.HasIndex("MentorId");

                    b.ToTable("MentorMenteeAssignments");
                });

            modelBuilder.Entity("Mentorship.Models.MentorshipSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("session_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<int?>("MenteeId")
                        .HasColumnType("int")
                        .HasColumnName("mentee_id");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int")
                        .HasColumnName("mentor_id");

                    b.Property<string>("SessionNotes")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("session_notes");

                    b.Property<int?>("SessionRating")
                        .HasColumnType("int")
                        .HasColumnName("session_rating");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.HasKey("SessionId")
                        .HasName("PK__Mentorsh__69B13FDCDE92B0FA");

                    b.HasIndex("MenteeId");

                    b.HasIndex("MentorId");

                    b.ToTable("MentorshipSessions");
                });

            modelBuilder.Entity("Mentorship.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("message_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("MessageContent")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("message_content");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("receiver_id");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("timestamp");

                    b.HasKey("MessageId")
                        .HasName("PK__Messages__0BBF6EE6F5AF8166");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Mentorship.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("review_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int?>("MenteeId")
                        .HasColumnType("int")
                        .HasColumnName("mentee_id");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int")
                        .HasColumnName("mentor_id");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("date")
                        .HasColumnName("review_date");

                    b.Property<string>("ReviewText")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("review_text");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__60883D90801932CA");

                    b.HasIndex("MenteeId");

                    b.HasIndex("MentorId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Mentorship.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("profile_picture");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("date")
                        .HasColumnName("registration_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('active')");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370FA5FAF7C5");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Mentorship.Models.Mentee", b =>
                {
                    b.HasOne("Mentorship.Models.User", "User")
                        .WithMany("Mentees")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Mentees__user_id__3B75D760");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mentorship.Models.Mentor", b =>
                {
                    b.HasOne("Mentorship.Models.User", "User")
                        .WithMany("Mentors")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Mentors__user_id__38996AB5");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mentorship.Models.MentorMenteeAssignment", b =>
                {
                    b.HasOne("Mentorship.Models.Mentee", "Mentee")
                        .WithMany("MentorMenteeAssignments")
                        .HasForeignKey("MenteeId")
                        .HasConstraintName("FK__MentorMen__mente__4AB81AF0");

                    b.HasOne("Mentorship.Models.Mentor", "Mentor")
                        .WithMany("MentorMenteeAssignments")
                        .HasForeignKey("MentorId")
                        .HasConstraintName("FK__MentorMen__mento__49C3F6B7");

                    b.Navigation("Mentee");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("Mentorship.Models.MentorshipSession", b =>
                {
                    b.HasOne("Mentorship.Models.Mentee", "Mentee")
                        .WithMany("MentorshipSessions")
                        .HasForeignKey("MenteeId")
                        .HasConstraintName("FK__Mentorshi__mente__3F466844");

                    b.HasOne("Mentorship.Models.Mentor", "Mentor")
                        .WithMany("MentorshipSessions")
                        .HasForeignKey("MentorId")
                        .HasConstraintName("FK__Mentorshi__mento__3E52440B");

                    b.Navigation("Mentee");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("Mentorship.Models.Message", b =>
                {
                    b.HasOne("Mentorship.Models.User", "Receiver")
                        .WithMany("MessageReceivers")
                        .HasForeignKey("ReceiverId")
                        .HasConstraintName("FK__Messages__receiv__4316F928");

                    b.HasOne("Mentorship.Models.User", "Sender")
                        .WithMany("MessageSenders")
                        .HasForeignKey("SenderId")
                        .HasConstraintName("FK__Messages__sender__4222D4EF");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Mentorship.Models.Review", b =>
                {
                    b.HasOne("Mentorship.Models.Mentee", "Mentee")
                        .WithMany("Reviews")
                        .HasForeignKey("MenteeId")
                        .HasConstraintName("FK__Reviews__mentee___46E78A0C");

                    b.HasOne("Mentorship.Models.Mentor", "Mentor")
                        .WithMany("Reviews")
                        .HasForeignKey("MentorId")
                        .HasConstraintName("FK__Reviews__mentor___45F365D3");

                    b.Navigation("Mentee");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("Mentorship.Models.Mentee", b =>
                {
                    b.Navigation("MentorMenteeAssignments");

                    b.Navigation("MentorshipSessions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Mentorship.Models.Mentor", b =>
                {
                    b.Navigation("MentorMenteeAssignments");

                    b.Navigation("MentorshipSessions");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Mentorship.Models.User", b =>
                {
                    b.Navigation("Mentees");

                    b.Navigation("Mentors");

                    b.Navigation("MessageReceivers");

                    b.Navigation("MessageSenders");
                });
#pragma warning restore 612, 618
        }
    }
}
